[pytest]
# Test configuration
testpaths = tests
python_files = test_*.py *_test.py
python_functions = test_*
python_classes = Test*
addopts = 
    --verbose
    --tb=short
    --maxfail=5

# Custom markers
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    unit: marks tests as unit tests
    performance: marks tests as performance tests
    e2e: marks tests as end-to-end tests
    ai_service: marks tests that require AI service mocking
    database: marks tests that require database access

# Test discovery
norecursedirs = 
    .git
    .pytest_cache
    *.egg
    dist
    build
    htmlcov
    venv
    .venv

# Minimum version requirements
minversion = 6.0

# Async support
asyncio_mode = auto

# Coverage configuration
[coverage:run]
source = app
omit = 
    */tests/*
    */venv/*
    */migrations/*
    */scripts/*
    app/testing/*
    app/config.py
    app/database.py
    app/init_db.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

[coverage:html]
directory = htmlcov

[coverage:xml]
output = coverage.xml