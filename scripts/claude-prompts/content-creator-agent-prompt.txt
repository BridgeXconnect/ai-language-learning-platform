I need you to create a specialized AI agent for my language learning platform using Archon framework.
        
        Current Architecture:
        - FastAPI backend with Supabase database
        - Next.js frontend  
        - Docker containerized services
        - Existing AI services (ai_service, rag_service, course_generation_service)
        
        Database Schema (relevant tables):
        - course_requests: id, company_name, industry, training_goals, current_english_level
        - sop_documents: id, course_request_id, file_path, processing_status
        - courses: id, title, description, cefr_level, status
        - modules: id, course_id, title, description, order_index
        - lessons: id, module_id, title, content, duration_minutes
        
        
        AGENT TO CREATE: Content Generation Specialist (content-creator)
        
        Description: Creates engaging lessons, exercises, and learning materials
        
        Key Responsibilities:
        - Generate lesson content based on curriculum structure
- Create varied exercise types (reading, writing, listening, speaking)
- Incorporate company-specific scenarios and vocabulary
- Ensure content aligns with CEFR standards
- Generate assessments and quizzes
        
        Required Tools:
        - lesson_content_generator
- exercise_creator
- assessment_builder
- multimedia_content_generator
        
        Database Interactions:
        - Read curriculum structure from modules table
- Create detailed lesson content in lessons table
- Generate exercises and assessments
        
        Please create:
        1. A complete Pydantic AI agent with proper system prompt
        2. Tool implementations for all required tools
        3. Dockerfile for containerization  
        4. FastAPI server wrapper with health endpoints
        5. MCP server implementation for agent communication
        6. Requirements.txt with all dependencies
        
        The agent should:
        - Connect to Supabase using environment variables
        - Use OpenAI GPT-4 as the language model
        - Include comprehensive error handling and logging
        - Follow the existing code patterns in the platform
        - Be production-ready with proper validation
        
        File structure should be:
        ```
        agents/content-creator/
        ├── main.py              # Main agent implementation
        ├── tools.py             # Tool implementations  
        ├── server.py            # FastAPI server wrapper
        ├── mcp_server.py        # MCP server implementation
        ├── Dockerfile           # Container definition
        ├── requirements.txt     # Python dependencies
        └── README.md           # Agent documentation
        ```